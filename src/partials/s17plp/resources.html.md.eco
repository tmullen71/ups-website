```
cacheable: false
```
### Online resources

The class [Moodle page](https://moodle.pugetsound.edu/moodle/course/view.php?id=11829) will be where you can turn in assignments and find some class materials.

### Required software resources

You will need runtime environments for Prolog and Haskell.

#### Prolog:

[SWI Prolog](http://www.swi-prolog.org/) is the version of Prolog I use and recommend, and it's the version you should probably use. You can install a copy on your own computer as well. Please take a look at the instructions on [Homework 1][hw1] for instructions on installing on OS X using Homebrew. The default installation method for OS X described on the SWI homepage does not work well with recent versions of OS X.  

[SWISH](http://swish.swi-prolog.org/) is a browser-based implementation of SWI Prolog that you can use without downloading anything. All of the assignments in this class should run in this environment.

#### Haskell:

[Haskell.org](https://www.haskell.org/) is the online headquarters for Haskell. You'll find a lot of resources there, including a basic browser-based interpreter, the [Haskell language definition](https://www.haskell.org/definition/), the [Hoogle](https://www.haskell.org/hoogle/) search engine of Haskell functions,  and a list of [tutorials](https://wiki.haskell.org/Tutorials).

You can download the [Haskell Platform](https://www.haskell.org/platform/) there to install on your own machine.

### Supplemental resources

The following resources are not essential but may be interesting if you wish to deepen your understanding of the theory behind Prolog and Haskell.

#### First-Order Predicate Logic:

[Predicate Logic](http://www.comp.nus.edu.sg/~cs3234/notes/predicate.pdf) by Martin Henz and Aquinas Hobor is a good quick introduction to first order predicate logic.

[Logic, Language, and Meaning, Vol. 1: Introduction to Logic](http://www.press.uchicago.edu/ucp/books/book/chicago/L/bo3618810.html), L.T.F. Gamut. These books (vols 1 & 2) are particularly geared towards the linguistic and philosophical ramifications of formal logic, but they cover a lot of relevant ground in an accessible way. Volume 1 covers propositional and predicate calculus.

#### Lambda Calculus:

[A Tutorial Introduction to the Lambda Calculus](http://www.inf.fu-berlin.de/lehre/WS03/alpi/lambda.pdf) is a nice and brief introduction by Ra√∫l Rojas.

[Logic, Language, and Meaning, Vol. 2: Intensional Logic and Logical Grammar](http://www.press.uchicago.edu/ucp/books/book/chicago/L/bo3628700.html), L.T.F. Gamut. The second volume of this pair gets into the more advanced territory of higher order logic and lambda calculus.

#### Category Theory:

[Category Theory for Computing Science](http://www.math.mcgill.ca/triples/Barr-Wells-ctcs.pdf) is a freely available introduction to category theory, the mathematical theory that underlies much of the design and functionality of Haskell.

[Category Theory for Programmers](http://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface) is an extended web tutorial by Bartosz Milewski intended as an accessible introduction to category theory.

[Haskell/Category Theory](http://en.wikibooks.org/wiki/Haskell/Category_theory) is a Wikibook providing a brief overview of category as it pertains specifically to Haskell.


[hw1]: <%= @site.url %>/hw/s17plp/hw1-prolog
